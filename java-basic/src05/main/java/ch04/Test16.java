// 비트이동연산자: >> , >>>, <<
//1비트 이동할때마다 값이 절반으로(2로) 나뉘어진다.
//n애 대해 x비트를 오른쪼긍로 이동=n/2**x
//나누기 연산을 수행하는 것 보다 계산 속도가 빠르다.


package ch04;

public class Test16 {

  public static void main(String[] args) {
   // <<: 연산자
    //왼쪽으로 비트를 이동시킨다.
    //왼쪽 빈자리는 0으로로 채운다.
    //왼쪽경계를 넘어가는 값은 버린다.
    //n*2**x한 것과 같은 결과가 나온다.
    
    
    int a=0xc9; //66
    System.out.println(Integer.toHexString(a << 1)); 
    System.out.println(a << 1);
    //000000000_00000000_00000000_11001010
    // 000000000_00000000_00000000_110010100   
    //0|000000000_00000000_00000001_10010010=0x00_ff_f1_92  
    
                     
    System.out.println(Integer.toHexString(a << 2));//0x19=25
    System.out.println(a <<  2);
    // 000000000_00000000_00000000_110010100   
    //00|00000000_00000000_00000000_1100100100=0x00_ff_f3_24  
    
    
    //1111 1111 1111 1111 1111 1111 1111 1010=21_4748_3642
    //0000 0000 0000 0000 0000 0000 0000 0101 +1
    //1000 0000 0000 0000 0000 0000 0000  0110=>16진수 =>-21_4748_3642
    //System.out.println(a << 1 );
    ///1|0000 0000 0000 0000 0000 0000 0000  1100=12
    a=-0x7f_ff_ff_fa;
    System.out.println(a);
    System.out.println(a << 1 ); //원래는 음수인데 이동하는 순간 양수가 된다.
    //음수를 왼쪽으로 이동할때는 부호비트에 관계없이 무조건 이동
    
    //음수를 왼쪽으로 이동할때는 
    a=-202; 
    
    System.out.println(a << 1);//
    System.out.println(a << 2);//
    System.out.println(a << 3);//
    System.out.println(a << 4);//음수가 
    
    //왼쪽으로 x만큼 비트를 이동시키는 것은
    //주어진 음수나 양수값을 2**x로 곱한 것과 같다.
    //음수의 경우는 양수로 바뀔수 있다.
    //양수로 바뀐후에는 곱하기 2 한것과 같다.
    
  }

}


/***
 
 *
 * 
 * 
 * *
 */



