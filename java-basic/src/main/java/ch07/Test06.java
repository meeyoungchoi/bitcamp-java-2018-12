//가비지와 가비지컬렉터
package ch07;

import ch07.Test07.Score;

public class Test06 {
 
  static class Score {
    String name; 
    int kor;
    int eng;
    int math;
    int sum;
    float aver;
  }
  public static void main(String[] args) {
    
    Score s1 = new Score();
    Score s2= new Score(); 
    
    s2=s1; //s2에 저장되었던 주소는 s1에 저장된 주소로 변경된다.
              //s2가 가리키던 원래의 인스턴스는 주소를 잃어버려 사용할수 없다.(garbage)
                //가비지는 가비지 컬렉터에 의해 제거될 수 있다.
                //개발자가 임의로 제거할수 없다.
//Score s2= new Score(); 
    
    //s2=s1; 
  //s1이 가리키던 인스턴스를 이제 s2도 가리킨다.
  //jvm은 인스턴스 주소를 몇 개의 레퍼런스가 갖고 있는지 따로 관리한다.(레퍼런스 카운트
  //다른 레퍼런스가 인스턴스 주소를 가질때마다 해당 인스턴스의 레퍼런스 카운트는 증가한다.
    //인스턴스 주소를 가리키는 레퍼런스가 줄 때마다 해당 인스턴스의 레퍼런스 카운트도 감소한다.
    //레퍼런스 카운트가 0인 것이 가비지다.
    //예)페이스북 팔로우 수
    //jvm은 메모리가 부족할때 가비지를 날린다.
           }
  }




/**
 * 가비지는 힙 메모리만 관리한다.
 * 가비지 컬렉터
 * 힙 메모리에 존재하는 가비지를 찾아 제거하는 일을 한다.
 * 다른 용도로 사용할수 있도록 그 메모리를 해제
 * 
 * 언제 작업하는가?
 * jvm이 관리하는 메모리가 부족할 때 
 * cpu가 한가할 때(cpu idle time)
 * (서버프로그램일 경우 가비지가 돌아가는 것을 볼수 있다.)

 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * */
