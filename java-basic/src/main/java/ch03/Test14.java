// 배열-인스턴스와 레퍼런스
package ch03;

public class Test14 {

  public static void main(String[] args) {

    
   
    
    //1.
    //int 타입의 배열에 arr1이라는 레퍼런스 변수를 선어하고 그 배열에 값을 초기화 한것이다.
    int[] arr1= {101, 102, 103, 104, 105};
    //                   500
    //2.
    int[] arr2= {80,81,82,83,84};
   
     
    arr2=arr1;//arr1이라는 변수를 arr2에 대입한것이다.
    System.out.printf("%d, %d\n",arr1[1], arr2[1]); //결과값 arr1[1]=100 arr2[1]=100
    //arr2에 저장되었던 배열 주소는 잃어 버려 더이상 그 배열을 사용할 수 없다.
    //이렇게 주소를 잃어버려 사용할수 없는 메모리를 garbage라고 부른다.
    
    arr1[1]=500; //arr1변수의 1번째 인덱스의 값을 500이라고 대입했다.
    
    //arr1이나 arr2모두 같은 배열 인스턴스(같은 주소값을 가리키기 때문에)를 가리키기 때문에 
    System.out.printf("%d, %d\n",arr1[1], arr2[1]);
    
   
    System.gc();//expand effort toward to make the memory they currently occupy available for quick reuse. 
    
    //garbage:주소를 잃어버려 사용할 수 없는 메모리
    //특정 조건이 되면 가비지 수집기(garbage collector)에 의해 메모리 해제된다.
   //메모리 해제? 다른 용도로 사용할 수 있도록 표시한다.
    
    
    /**
     * 가비지 수집 조건=가비지 컬렉터가 동작할 때
     * -메모리가 부족할 때
     * 운영체제로부터 메모리를 추가로 받기 전에 먼저 기존에 사용하던 메모리에서 가비지를 제거한다.
     * 
     * 
     * cpu가 한가할때
     * 24시간 365일 내내 실행하는 서버 프로그램인 경우, 실생 중간에 cpu가 한가할 때
     * 가비지를 제거한다.
     * 
     * 주의!
     * jvm프로그램을 종료하면 jvm이 사용한 메모리를 운영체제가 모두 회수한다.
     * 
     * -가비지를 강제로 지우도록 명령하는 방법
     *  -없다
     *c언어:free(메모리주소);
     *c++:delete 객체주소; 해당되는 메모리를 강제로 제거 
     *요줌 언어의 트렌드는 사용하지 않는 메모리를 개발자가 해제하는 것이 아니라 
     *vm이 해제한다.
     *
     *예) j.s, c#, python, php, Go, java 등
     *요즘 언어의 트렌드는 vm으로 실행하는 것이다.
     *
     *왜?  System.out.printf("%d, %d\n",arr1[1], arr2[1]);
     *직접 기계어로 전환되면 메모리 관리를 자동으로 수행할수 없다.
     *가상의 기계어로 만들어 놓고 vm이 실행한다.
     *
     *-가비지 컬렉터를 강제로 실행하는 방법?
     *-없다
     *단 원래 계획보다 가능한 빨리 실행하라고 독촉하는 방법은 있다.
     *System.gc() 메서드 호출
     *그런데 바로 실행할 지 나중에 실행할 지 그 시점을 보장하지는 않는다.
     *
     *쓰레기 수집은 가비지 컬렉터가 알아서 하게 내비둔다.
     *
     *
     * *
     */
    
    
    
    
   
    
  }

}


/**
 *  
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 */








